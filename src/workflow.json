{
    "Comment": "A description of my state machine",
    "StartAt": "Check Inventory",
    "States": {
      "Check Inventory": {
        "Type": "Task",
        "Resource": "arn:aws:states:::lambda:invoke",
        "OutputPath": "$.Payload",
        "Parameters": {
          "Payload.$": "$",
          "FunctionName": "arn:aws:lambda:us-east-1:076771648864:function:CheckInventory:$LATEST"
        },
        "Retry": [
          {
            "ErrorEquals": [
              "Lambda.ServiceException",
              "Lambda.AWSLambdaException",
              "Lambda.SdkClientException",
              "Lambda.TooManyRequestsException"
            ],
            "IntervalSeconds": 1,
            "MaxAttempts": 3,
            "BackoffRate": 2
          }
        ],
        "Next": "Process Payment",
        "Catch": [
          {
            "ErrorEquals": [
              "States.ALL"
            ],
            "Next": "Release Inventory"
          }
        ]
      },
      "Release Inventory": {
        "Type": "Task",
        "Resource": "arn:aws:states:::lambda:invoke",
        "OutputPath": "$.Payload",
        "Parameters": {
          "Payload.$": "$",
          "FunctionName": "arn:aws:lambda:us-east-1:076771648864:function:ReleaseInventory:$LATEST"
        },
        "Retry": [
          {
            "ErrorEquals": [
              "Lambda.ServiceException",
              "Lambda.AWSLambdaException",
              "Lambda.SdkClientException",
              "Lambda.TooManyRequestsException"
            ],
            "IntervalSeconds": 1,
            "MaxAttempts": 3,
            "BackoffRate": 2
          }
        ],
        "Next": "Send Cancellation"
      },
      "Send Cancellation": {
        "Type": "Task",
        "Resource": "arn:aws:states:::sns:publish",
        "Parameters": {
          "Message.$": "$",
          "TopicArn": "arn:aws:sns:us-east-1:076771648864:SendCancellation"
        },
        "End": true
      },
      "Process Payment": {
        "Type": "Task",
        "Resource": "arn:aws:states:::lambda:invoke",
        "OutputPath": "$.Payload",
        "Parameters": {
          "Payload.$": "$",
          "FunctionName": "arn:aws:lambda:us-east-1:076771648864:function:ProcessPayment:$LATEST"
        },
        "Retry": [
          {
            "ErrorEquals": [
              "Lambda.ServiceException",
              "Lambda.AWSLambdaException",
              "Lambda.SdkClientException",
              "Lambda.TooManyRequestsException"
            ],
            "IntervalSeconds": 1,
            "MaxAttempts": 6,
            "BackoffRate": 2
          },
          {
            "ErrorEquals": [
              "Payment Error"
            ],
            "BackoffRate": 2,
            "IntervalSeconds": 1,
            "MaxAttempts": 3
          }
        ],
        "Next": "Needs Invoice?",
        "Catch": [
          {
            "ErrorEquals": [
              "States.ALL"
            ],
            "Next": "Refund Payment"
          }
        ]
      },
      "Refund Payment": {
        "Type": "Task",
        "Resource": "arn:aws:states:::lambda:invoke",
        "OutputPath": "$.Payload",
        "Parameters": {
          "Payload.$": "$",
          "FunctionName": "arn:aws:lambda:us-east-1:076771648864:function:RefundPayment:$LATEST"
        },
        "Retry": [
          {
            "ErrorEquals": [
              "Lambda.ServiceException",
              "Lambda.AWSLambdaException",
              "Lambda.SdkClientException",
              "Lambda.TooManyRequestsException"
            ],
            "IntervalSeconds": 1,
            "MaxAttempts": 3,
            "BackoffRate": 2
          }
        ],
        "Next": "Release Inventory"
      },
      "Needs Invoice?": {
        "Type": "Choice",
        "Choices": [
          {
            "Variable": "$.paymentType",
            "StringEquals": "invoice",
            "Next": "Create Invoice Request"
          }
        ],
        "Default": "Send Confirmation"
      },
      "Create Invoice Request": {
        "Type": "Task",
        "Resource": "arn:aws:states:::sqs:sendMessage",
        "Parameters": {
          "MessageBody.$": "$",
          "QueueUrl": "https://sqs.us-east-1.amazonaws.com/076771648864/CreateInvoiceQueue"
        },
        "Next": "Send Confirmation",
        "ResultPath": "$.invoiceRequestResult"
      },
      "Send Confirmation": {
        "Type": "Task",
        "Resource": "arn:aws:states:::sns:publish",
        "Parameters": {
          "Message.$": "$",
          "TopicArn": "arn:aws:sns:us-east-1:076771648864:SendConfirmation"
        },
        "End": true
      }
    }
  }